apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: shiojiri-rainbow-seeker
  labels:
    app: shiojiri-rainbow-seeker
    component: config
type: Opaque
stringData:
  # Database Configuration
  DB_HOST: "postgres-service.shiojiri-rainbow-seeker.svc.cluster.local"
  DB_PORT: "5432"
  DB_NAME: "shiojiri_rainbow"
  DB_USER: "postgres"
  DB_PASSWORD: "REPLACE_WITH_STRONG_DB_PASSWORD"
  
  # JWT Configuration (use base64 encoded 256-bit secret)
  JWT_SECRET: "REPLACE_WITH_256_BIT_JWT_SECRET"
  JWT_EXPIRES_IN: "7d"
  
  # Weather API Configuration
  WEATHER_API_KEY: "REPLACE_WITH_ACTUAL_WEATHER_API_KEY"
  
  # Firebase Configuration
  FIREBASE_PROJECT_ID: "REPLACE_WITH_ACTUAL_PROJECT_ID"
  FIREBASE_CLIENT_EMAIL: "REPLACE_WITH_ACTUAL_CLIENT_EMAIL"
  FIREBASE_PRIVATE_KEY: "REPLACE_WITH_ACTUAL_PRIVATE_KEY_BASE64"
  
  # Redis Configuration
  REDIS_HOST: "redis-service.shiojiri-rainbow-seeker.svc.cluster.local"
  REDIS_PORT: "6379"
  REDIS_PASSWORD: "REPLACE_WITH_STRONG_REDIS_PASSWORD"
  
  # Security Configuration
  ALLOWED_ORIGINS: "https://shiojiri-rainbow-seeker.com,https://app.shiojiri-rainbow-seeker.com"
  ENCRYPTION_KEY: "REPLACE_WITH_ENCRYPTION_KEY"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: shiojiri-rainbow-seeker
  labels:
    app: shiojiri-rainbow-seeker
    component: config
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  MODEL_PATH: "/app/models"
  PREDICTION_THRESHOLD: "0.5"
  
  # Performance Configuration
  DB_POOL_MAX: "25"
  DB_POOL_MIN: "2"
  CACHE_TTL: "300"
  
  # Security Configuration
  RATE_LIMIT_WINDOW: "900000"  # 15 minutes
  RATE_LIMIT_MAX: "50"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  HEALTH_CHECK_TIMEOUT: "5000"

---
# Secret for generating secure secrets in production
apiVersion: v1
kind: Secret
metadata:
  name: secret-generator-config
  namespace: shiojiri-rainbow-seeker
  labels:
    app: shiojiri-rainbow-seeker
    component: security
type: Opaque
stringData:
  # Commands to generate secure secrets:
  # JWT_SECRET: openssl rand -base64 32
  # DB_PASSWORD: openssl rand -base64 24
  # REDIS_PASSWORD: openssl rand -base64 24
  # ENCRYPTION_KEY: openssl rand -base64 32
  generation-commands: |
    echo "Generate secrets with:"
    echo "JWT_SECRET=$(openssl rand -base64 32)"
    echo "DB_PASSWORD=$(openssl rand -base64 24)"
    echo "REDIS_PASSWORD=$(openssl rand -base64 24)"
    echo "ENCRYPTION_KEY=$(openssl rand -base64 32)"